{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "assetname",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "cost",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes32[]",
						"name": "dependencies",
						"type": "bytes32[]"
					}
				],
				"name": "createdBluprint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "blueprintOwner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "earnings",
						"type": "uint256"
					}
				],
				"name": "showEarnings",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "nftOwner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "holdings",
						"type": "uint256"
					}
				],
				"name": "showHoldings",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32[]",
						"name": "dependencies",
						"type": "bytes32[]"
					},
					{
						"internalType": "uint256[]",
						"name": "quantities",
						"type": "uint256[]"
					},
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "checkDependency",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "s1",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "s2",
						"type": "string"
					}
				],
				"name": "compareStrings",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "assetURI",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "assetname",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "imageURL",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "cost",
						"type": "uint256"
					}
				],
				"name": "createBlueprint",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "getNamehash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "assetURI",
						"type": "string"
					}
				],
				"name": "mint",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "registerSystem",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "pubAddress",
						"type": "address"
					}
				],
				"name": "registerTheme",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "resolveNodeNamehash",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "id",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "nftcontract",
								"type": "address"
							}
						],
						"internalType": "struct Registry.NodeRecord",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "resolveSystemNamehash",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "locationNFTContract",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "questNFTContract",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "regionsNFTContract",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "charactersNFTContract",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "itemsNFTContract",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "loreNFTContract",
								"type": "address"
							}
						],
						"internalType": "struct Registry.SystemRecord",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "resolveThemeNamehash",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "publisher",
								"type": "address"
							}
						],
						"internalType": "struct Registry.ThemeRecord",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "assetURI",
						"type": "string"
					}
				],
				"name": "showQuantity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "assetURI",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "quantity",
						"type": "uint256"
					}
				],
				"name": "updateBlueprint",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "name",
						"type": "bytes"
					},
					{
						"internalType": "string",
						"name": "contractType",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "contractAddress",
						"type": "address"
					}
				],
				"name": "updateSystem",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "pubAddress",
						"type": "address"
					}
				],
				"name": "updateTheme",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Remix-v2/Registry.sol": "Registry"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Remix-v2/ENSNamehash.sol": {
			"keccak256": "0x47e72a47d3bf4b25994347c556c541bca289c83a80e08bf3c0d28eff82dd4205",
			"urls": [
				"bzz-raw://ecc730bab8818f3fd15cd0b5a8403043d0218a9dc662923533d9ecefa30d20d9",
				"dweb:/ipfs/QmVhzJuSo7BatHhdQmxnVhxxLqzMzp4yspW7pqnuhWGuBx"
			]
		},
		"Remix-v2/Registry.sol": {
			"keccak256": "0x52af3f32dc7d395c5c2d0c0f4507f792300676813f794272e3d2c802ec200091",
			"license": "MIT",
			"urls": [
				"bzz-raw://9b9f4c88f3e9c141c5deb9f8cfbc50b588f45d15c9d7d2e00e17b1195ba7503b",
				"dweb:/ipfs/QmXrQQ77yRdAZVvyAZzwnBPMCA8r8wigjPwBiiNVszMN5G"
			]
		}
	},
	"version": 1
}