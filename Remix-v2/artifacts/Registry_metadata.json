{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "s1",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "s2",
						"type": "string"
					}
				],
				"name": "compareStrings",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "name",
						"type": "bytes"
					}
				],
				"name": "getNamehash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "registerSystem",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "pubAddress",
						"type": "address"
					}
				],
				"name": "registerTheme",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "resolveNamehashType",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "resolveNodeNamehash",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "id",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "nftcontract",
								"type": "address"
							}
						],
						"internalType": "struct Registry.NodeRecord",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "resolveSystemNamehash",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "locationNFTContract",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "questNFTContract",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "regionsNFTContract",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "charactersNFTContract",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "itemsNFTContract",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "loreNFTContract",
								"type": "address"
							}
						],
						"internalType": "struct Registry.SystemRecord",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "resolveThemeNamehash",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "publisher",
								"type": "address"
							}
						],
						"internalType": "struct Registry.ThemeRecord",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "name",
						"type": "bytes"
					},
					{
						"internalType": "string",
						"name": "contractType",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "contractAddress",
						"type": "address"
					}
				],
				"name": "updateSystem",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "pubAddress",
						"type": "address"
					}
				],
				"name": "updateTheme",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Remix-v2/Registry.sol": "Registry"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Remix-v2/ENSNamehash.sol": {
			"keccak256": "0x5e1f76c15eae7a14a2245870a8b6a72bca022637fa4d2d1513a16f200481bb6b",
			"urls": [
				"bzz-raw://4d9d1ea892b46d91ad0f7fca02829a299034c2cdee9dedcfc1d173e4b42cb45f",
				"dweb:/ipfs/Qmb6UDeuK8uFr62UC3JEGPU3cwda7pVRQiij66cFHvsL8j"
			]
		},
		"Remix-v2/Registry.sol": {
			"keccak256": "0x0680c345cb36925493f7c808f1fbc88d3fa9cf03d3f371638382e9f1f8c4ddc0",
			"license": "MIT",
			"urls": [
				"bzz-raw://4cab044460ff51794cd45edb7e2da9095b029be8416247354aefc87fe33e66d9",
				"dweb:/ipfs/QmPuP7665wVYGCZV9FSL3PEDQXTSYo6QrccMSFVifVNnzv"
			]
		}
	},
	"version": 1
}